openapi: 3.1.0
info:
  title: Comfy UI Wrapper API
  description: "An API that allows easy programmatic access to advanced workflows
    in ComfyUI. "
  version: 1.0.5
paths:
  /prompts/results:
    get:
      operationId: getAllPromptResults
      tags:
        - prompts
      summary: Get all prompt results
      responses:
        "200":
          description: The request was successful, and the server has returned the
            requested resource in the response body.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PromptResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerErrror"
      parameters:
        - in: query
          name: clientId
          required: false
          style: form
          description: Filter by a specific client ID
          explode: true
          schema:
            type: string
          allowReserved: false
        - in: query
          name: status
          required: false
          style: form
          description: Filter by a specific prompt status
          explode: true
          schema:
            type: string
            enum:
              - pending
              - completed
              - failed
          allowReserved: false
        - in: query
          name: limit
          required: false
          style: form
          description: Filter by a specific prompt status
          explode: true
          schema:
            type: integer
          allowReserved: false
  /prompts/{id}/result:
    get:
      operationId: getAPromptResult
      tags:
        - prompts
      summary: Get a prompt result
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: The request was successful, and the server has returned the
            requested resource in the response body.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerErrror"
  /prompts:
    post:
      operationId: createAPrompt
      tags:
        - prompts
      summary: Create a prompt
      responses:
        "201":
          description: The request was successful, and a new resource was created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prompt"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerErrror"
      requestBody:
        required: true
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromptCreate"
  /outputs/{filename}:
    get:
      operationId: getOutputOfPromptResult
      tags:
        - outputs
      summary: Get output of prompt result
      parameters:
        - $ref: "#/components/parameters/filename"
      responses:
        "200":
          description: The request was successful, and the server has returned the
            requested resource in the response body.
          content:
            image/png:
              schema:
                type: object
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
components:
  responses:
    InternalServerErrror:
      description: The server encountered an unexpected condition that prevented it
        from fulfilling the request. Report the issue to the support team if it
        persists.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
              - message
    BadRequest:
      description: The server could not understand the request due to invalid syntax.
        The client should modify the request and try again.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              errors:
                type: array
                items:
                  type: object
                  properties:
                    message:
                      type: string
                  required:
                    - message
            required:
              - message
    NotFound:
      description: The server cannot find the requested resource. The endpoint may be
        invalid or the resource may no longer exist.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
              - message
  schemas:
    Prompt:
      type: object
      properties:
        clientId:
          type: string
        promptId:
          type: string
        text:
          type: string
        enhancedText:
          type: string
        workflow:
          type: string
          default: realistic
          enum:
            - realistic
            - fantasy
            - anime
        layout:
          type: string
          default: square
          enum:
            - portrait
            - landscape
            - square
        seed:
          type: string
        createdAt:
          type: string
      required:
        - clientId
        - promptId
        - text
        - workflow
        - layout
        - seed
        - createdAt
      description: Represents a prompt with no result available yet
    PromptCreate:
      type: object
      properties:
        clientId:
          type: string
        text:
          type: string
        enhanceText:
          type: boolean
        workflowOverride:
          type: string
          default: realistic
          enum:
            - realistic
            - fantasy
            - anime
        layoutOverride:
          type: string
          default: square
          enum:
            - portrait
            - landscape
            - square
        seedOverride:
          type: integer
      required:
        - text
        - clientId
      description: Data transfer object for creating a new Prompt.
      x-fiddle-dto-info:
        baseSchemaName: Prompt
    PromptResult:
      type: object
      properties:
        clientId:
          type: string
        promptId:
          type: string
        text:
          type: string
        enhancedText:
          type: string
        workflow:
          type: string
          default: realistic
          enum:
            - realistic
            - fantasy
            - anime
        layout:
          type: string
          default: square
          enum:
            - portrait
            - landscape
            - square
        seed:
          type: integer
        status:
          type: string
          enum:
            - pending
            - completed
            - failed
        statusMessage:
          type: string
        progress:
          type: string
        outputFilename:
          type: string
        createdAt:
          type: string
      required:
        - clientId
        - promptId
        - text
        - workflow
        - layout
        - seed
        - createdAt
      description: Represents a complete/incomplete prompt result
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
    filename:
      name: filename
      in: path
      required: true
      schema:
        type: string
tags:
  - name: prompts
  - name: outputs
