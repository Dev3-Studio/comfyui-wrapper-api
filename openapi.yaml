openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
servers:
  - url: http://localhost:3001
paths:
  /outputs/{filename}:
    get:
      summary: Get output by filename
      parameters:
        - name: filename
          in: path
          required: true
          schema:
            type: string
          description: The filename in the format <uuid>.png
      responses:
        '200':
          description: Successful response
          content:
            image/png:
              schema:
                type: string
                format: binary
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /prompts:
    post:
      summary: Create a new prompt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptCreate'
      responses:
        '201':
          description: Prompt created
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /prompts/results:
    get:
      summary: Get all prompt results
      parameters:
        - name: clientId
          in: query
          schema:
            type: string
            format: uuid
          required: false
        - name: status
          in: query
          schema:
            type: string
            enum: [PENDING, COMPLETED, FAILED]
          required: false
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
          required: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /prompts/{id}:
    get:
      summary: Get prompt result by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    PromptCreate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        clientId:
          type: string
          format: uuid
        status:
          type: string
          enum: [PENDING, COMPLETED, FAILED]